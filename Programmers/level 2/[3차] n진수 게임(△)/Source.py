def nary(n, t):
    s = ''
    nn = '0123456789ABCDEF'
    while t:
        s += nn[t % n]
        t //= n
        
    return ''.join(reversed(s))

def solution(n, t, m, p):
    s = '0'
    answer = ''
    
    for i in range(m * t):
        s += nary(n, i)
        
    cnt = 0
    i = 0
    while cnt < t:
        if (i % m) + 1 == p:
            answer += s[i % len(s)]
            cnt += 1
        i += 1
    return answer

# 테스트 1 〉	통과 (0.01ms, 10.2MB)
# 테스트 2 〉	통과 (0.02ms, 10.2MB)
# 테스트 3 〉	통과 (0.02ms, 10.3MB)
# 테스트 4 〉	통과 (0.03ms, 10.2MB)
# 테스트 5 〉	통과 (0.13ms, 10.2MB)
# 테스트 6 〉	통과 (0.13ms, 10.2MB)
# 테스트 7 〉	통과 (0.23ms, 10.2MB)
# 테스트 8 〉	통과 (0.13ms, 10.2MB)
# 테스트 9 〉	통과 (0.13ms, 10.2MB)
# 테스트 10 〉	통과 (0.14ms, 10.3MB)
# 테스트 11 〉	통과 (0.13ms, 10.3MB)
# 테스트 12 〉	통과 (0.13ms, 10.2MB)
# 테스트 13 〉	통과 (0.13ms, 10.2MB)
# 테스트 14 〉	통과 (27.33ms, 10.3MB)
# 테스트 15 〉	통과 (28.21ms, 10.4MB)
# 테스트 16 〉	통과 (27.42ms, 10.3MB)
# 테스트 17 〉	통과 (1.35ms, 10.2MB)
# 테스트 18 〉	통과 (1.44ms, 10.3MB)
# 테스트 19 〉	통과 (0.40ms, 10.4MB)
# 테스트 20 〉	통과 (1.35ms, 10.1MB)
# 테스트 21 〉	통과 (6.86ms, 10.3MB)
# 테스트 22 〉	통과 (3.12ms, 10.3MB)
# 테스트 23 〉	통과 (9.65ms, 10.3MB)
# 테스트 24 〉	통과 (18.83ms, 10.3MB)
# 테스트 25 〉	통과 (12.32ms, 10.3MB)
# 테스트 26 〉	통과 (3.91ms, 10.3MB)
# 채점 결과
# 정확성: 100.0
# 합계: 100.0 / 100.0